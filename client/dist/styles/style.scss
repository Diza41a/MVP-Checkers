@font-face {
  font-family: 'Montserrat';
  src: url('../assets/fonts/Montserrat/static/Montserrat-Light.ttf');
}

@font-face {
  font-family: 'Montserrat-Bold';
  src: url('../assets/fonts/Montserrat/static/Montserrat-SemiBold.ttf');
}

$fontSize: 24px;
$mainDark:#2b2d42;
$mainLight: #edf2f4;
$mainGray: #8d99ae;
$mainRed: #d90429;

$whiteChecker: rgba(0, 0, 255, 0.864);
$blackChecker: rgba(255, 0, 0, 0.864);
$whiteCheckerTransparent: rgba(0, 0, 255, 0.444);
$blackCheckerTransparent: rgba(255, 0, 0, 0.444);

$boardBorderSize: 0.6vw;
@mixin fieldSize($size) {
  width: calc(40vw / $size) - $boardBorderSize;
  height: calc(40vw / $size) - $boardBorderSize;
}

* {
  margin: 0;
  padding: 0;
  font-size: $fontSize;
  font-family: 'Montserrat';
}

html {
  height: 100%;
}

body {
  background: url(../assets/images/background.jpeg);

  // background-color: #2b2d42;


  // Animated background (https://www.youtube.com/watch?v=htXCnRDjdvc)
  // .bg {
  //   background-image: linear-gradient(-60deg, $mainDark 50%, $mainLight 50%);
  //   position: fixed;
  //   bottom: 0;
  //   top: 0;
  //   left: -50%;
  //   right: -50%;
  //   z-index: -1;
  //   opacity: 0.5;
  //   animation: slide 13s ease-in-out infinite alternate;
  // }
  // .bg2 {
  //   animation-direction: alternate-reverse;
  //   animation-duration: 14s;
  // }
  // .bg3 {
  //   animation-duration: 15s;
  // }
  // @keyframes slide {
  //   from {
  //     transform: translate(-25%);
  //   }
  //   to {
  //     transform: translate(25%);
  //   }
  // }


  #root {
    .login-form-wrap {
      width: 100vw;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      // Login form
      .login-form {
        width: 40vw;
        padding: 2vw;
        text-align: center;
        background-color: rgba($color: $mainDark, $alpha: 0.7);
        border-radius: 1vw;

        .logo {
          font-family: 'Montserrat-Bold';
          font-size: $fontSize * 2.4;
          font-weight: lighter;
          color: $mainLight;
          margin-bottom: 0.5vw;
        }

        .login-welcome {
          font-size: $fontSize * 1.3;
          color: $mainLight;
        }

        .login-input-wrap {
          position: relative;
          margin: 2vw;

          input {
            width: 30vw;
            font-size: $fontSize * 1.1;
            padding: 0.75vw 0 0.75vw 7.5vw;
            border-radius: 0.5vw;
            border: none;
            outline: none;
            font-size: $fontSize * 1.2;

            &[type='password'] {
              font-family: Verdana;
              letter-spacing: 0.125em;

              &::placeholder {
                font-family: 'Montserrat';
                letter-spacing: normal;
              }
            }
          }

          .login-icon {
            position: absolute;
            left: 2vw;
            top: -0.3vw;
            border-radius: 50%;
            font-size: $fontSize * 2.3;
            padding: 0.6vw 0.8vw;
            color: $mainLight;
            background-color: $mainRed;
          }
        }

        #login-submit {
          font-family: 'Montserrat-Bold';
          font-size: $fontSize * 1.3;
          width: 50%;
          padding: 0.75vw;
          margin: 1vw 0 2vw 0;
          border-radius: 0.75vw;
          background-color: $mainRed;
          color: $mainLight;
          border: none;
          cursor: pointer;
        }
      }
    }

    // Checker board
    .checker-board {
      width: 40vw;
      height: 40vw;
      border-spacing:0;
      background-color: white;
      border: $boardBorderSize solid white;
      /* offset-x | offset-y | blur-radius | spread-radius | color */
      box-shadow: 0 0 0.8vw 0.3vw white, inset 0 0 0 0.125vw black;
      tbody {
        border: 0.17vw solid black;
        .checker-field {
          $boardSizes: 8, 10, 12;
          @each $size in $boardSizes {
            &:nth-last-child(n) {
              @include fieldSize(($size));
            }
          }
          &.even:nth-child(2n),  &.odd:nth-child(2n - 1) {
            background-color: black;
            &.potential-move {
              background-color: $mainGray;
            }
          }
          // All pieces
          div {
            margin: auto;
            width: 65%;
            height: 65%;
            border-radius: 50%;
            border: 0.4vw solid white;
            cursor: pointer;

            @mixin queenEffect ($color) {
              content: " ";
              display: block;
              box-shadow: 0 0 0.75vw 0.25vw $color, inset 0 0 0.5vw 0.25vw $color;
              border: 0.2vw solid white;
              border-radius: 50%;
              height: 50%;
              width: 50%;
              position: absolute;
              left: 0;
              right: 0;
              top: 0;
              bottom: 0;
              margin: auto;
            }

            &.white-piece {
              background-color: $whiteCheckerTransparent;
              /* offset-x | offset-y | blur-radius | spread-radius | color */
              box-shadow: 0 0 0.75vw 0.25vw $whiteChecker, inset 0 0 0.5vw 0.25vw $whiteChecker;
            }
            &.white-queen {
              background-color: $whiteCheckerTransparent;
              /* offset-x | offset-y | blur-radius | spread-radius | color */
              box-shadow: 0 0 0.75vw 0.25vw $whiteChecker, inset 0 0 0.5vw 0.25vw $whiteChecker;
              position: relative;
              &::after {
                @include queenEffect($whiteChecker);
              }
            }
            &.black-piece {
              background-color: $blackCheckerTransparent;
              /* offset-x | offset-y | blur-radius | spread-radius | color */
              box-shadow: 0 0 0.75vw 0.25vw $blackChecker, inset 0 0 0.5vw 0.25vw $blackChecker;
            }
            &.black-queen {
              background-color: $blackCheckerTransparent;
              /* offset-x | offset-y | blur-radius | spread-radius | color */
              box-shadow: 0 0 0.75vw 0.25vw $blackChecker, inset 0 0 0.5vw 0.25vw $blackChecker;
              position: relative;
              &::after {
                @include queenEffect($blackChecker);
              }
            }
          }
        }
      }
    }
  }
}

// $checkerBoardBreakpoint: 1000px;
// @media (max-width: $checkerBoardBreakpoint) {
//   body {
//     #root {
//       .checker-board {
//         width: 80vw;
//         height: 80vh;
//       }
//     }
//   }
// }